1 两个创建方式 字面量  实例  ==> 变量必须用实例的方式。i m g 实例创建的第二个参数
  实例创建方式  var reg = new RegExp("\\d","g");
2 特殊意义元字符:\d \w \n . \b \s ^ $ \
3 量词: + ? * {n} {n,} {n,m} ==> 在元字符后面
4 或者:  |  [xyz]   [^xyz]  [0-9] [+-.] [\w\d] ==> 在或者中我们使用了()  /^(\d|\w)$/
5 test:  true/false
6 exec:   lastIndex, g, 如果捕获不到返回时null  ["总","分组",index: input: ]
7 match: ['2015','2016'] ==> 如果有分组拿不来,如果没有g和exec同样
8 split:  参数可以是一个正则
9 replace: param1: reg , param2: function (){
                                    arguments: ["总","分"..."index","input"]
                                 }

10: 1 量词   2 +? 尽可能少的去匹配  3 (?:aaaa)匹配不捕获 ==> 破坏分组
11:  分组引用/(\w)\1(\d)\2/
12: RegExp.$1  ......
13: 用exec模拟match
14： 手机号，有效数字，身份证，邮箱，18-65， 非空验证 , 数字换成中文
15: 懒惰性和贪婪性
16: 分析别人家的正则

