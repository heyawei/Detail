在CSS2中所有的效果都是即时效果，没法设置匀速或减速之类的效果
css3中提供了可以设置动画效果的属性
1.transition属性
  语法：当css属性值发生改变时，由起始值向结束值之间实现平滑过渡的效果
  特点：1.只能设置两种状态，一个是起始状态，另一个结束状态
       2.触发是有条件的，通过伪类，js或者媒体查询触发 （只要css属性值发生改变，则过渡动画就会被触发）

  transition细分属性
  transition-property 过渡属性（需要增加动画效果的CSS属性）默认值 all
  transition-duration 过渡时间 （必须设置）
  transition-timing-function 动画运行的速度
    ease(默认值，减速) ease-in 加速  ease-out 减速 ease-in-out 先加速后减速 linear 匀速  cubic-bezier(.3,.91,.83,.42) 贝塞尔曲线
  transition-delay 延迟时间  0s

  transition简写写法
  transition:all 1s ease-in 1s;
  ->transition:1s;只设置运行时间，其他值设置默认值

  transform 变形属性
  2D变形方法
  默认情况下，所有变形的基准点都是元素的中心点
  transform:rotate(45deg) 单位deg，正值:顺时针旋转 负值：逆时针旋转
  transform:scale(x,y) x:水平方向缩放倍数 y:垂直方向的缩放倍数 只设置一个值，水平方向和垂直方向缩放的倍数是一样的
  transform:skew(x,y) 只写一个参数表示水平方向的倾斜角度 x:水平方向的倾斜角度（正->水平向左 负->水平向右）
  y:垂直方向的倾斜角度 （正->向下 负->向上）;
  transform:translate(x,y) 一个参数表示水平方向移动距离 二个参数x：水平方向移动距离 y:垂直方向移动的距离
  translate()平移时基准点永远是元素的中心点
  这几个方法可以放在一起使用，中间以空格隔开，但是注意顺序问题
  translate()一般放在其他变形方法的最后，因为如果放第一个则会改变变形的基准点

  transform-origin:center;//top,left,right,bottom ,10px 10px

  关键帧动画
  弥补了过渡动画的缺陷，
  比如1.过渡动画只能设置两种状态，关键帧动画可以设置多种状态的
      2.关键帧动画不需要触发条件，是立马执行的
  关键帧动画执行需要两个步骤：
  1.通过keyframes设置动画运行的轨迹
  @keyframes 动画名称{
    0%{

    }
    50%{

    }
    100%{

    }

  }
  2.通过animation调用声明的关键帧
   animation-name 帧动画名称 (必写)
   animation-duration 动画执行的时间 (必写)
   animation-timing-function 动画运行的速度  ease(默认值)
   animation-delay 延迟时间
   animation-iteration-count 动画执行的次数 1|| infinite(无限循环次)
   animation-direction:normal|reverse|alternate(交替运行)|alternate-reverse(反方向交替运行)
   animation-play-state :running(默认值)|paused  动画是运行的还是停止的
   animation-fill-mode:none|backwards(回到起始位置)|forwards(最后一帧位置)|both(根据方向，可能停留在最后一帧，也有可能停留在第一帧)  动画运行结束的状态

   简写写法：
   animation:move 1s ease 1s 1 reverse paused both

   animation:move 1s  1 both

 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
    3D变形
    1.transform-style:flat(默认值)|preserve-3d（3D空间展示）
    必须作用在变形元素的父标签上
    2.perspective 景深效果 近大远小的效果 一般设置值在800~2000px,作用在祖先标签上（包含父标签）指用户到物体z轴平面的距离
      transform:perspective(800px) 直接作用在子元素上
      perspective-origin：center  默认值是元素中心点，一般不用修改

      transform:translate3d(x,y,z);x：x轴移动的距离 y：y轴移动的距离，z:z轴上移动的距离
      transform:translateX() x轴移动的距离
      transform:translateY() y轴移动的距离
      transform:translateZ() 在Z轴上平移 始终垂直于x轴和y轴

      transform:scale3d(x,y,z)
      transform:scaleX();x轴上缩放倍数
      transform:scaleY();y轴上缩放倍数
      transform:scaleZ();单独设置不起作用，必须配合着其他变形方法一起使用才能起作用

      transform:rotate3d(rx,ry,rz,a);rx:x轴上向量坐标 ry:y轴上向量坐标，rz：z轴上的向量坐标 a:角度
      transform:rotateX(45deg);上下翻转(前后翻转) rotate3d(1,0,0,45deg) 正：前翻 负：后翻
      transform:rotateY(45deg);左右翻转 rotate3d(0,1,0,45deg) 正：往右翻 负：往左翻
      transform:rotateZ(45deg);z轴上旋转，效果等同于rotate()方法   rotate3d(0,0,1,45deg)





